import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Color;


public class Frame extends JFrame implements ActionListener{
    private JMenuBar mb;
    private JMenu finestra;
    private JScrollPane sTable;
    private JComboBox cbTable;

    //private JMenuItem select,update,insert,delete;    Si volguessim fer una finestra per tipus de comanda.
    private JPanel pSelect,pUpdate,pDelete,pInsert,pTable,pWhere,pGen;
    private JLabel lSelect,lUpdate,lDelete,lInsert,lTable,
            lTableContentSelect,lTableContentUpdate,lTableContentDelete,lTableContentInsert,
            lWhere;
    private JTextField tSelect,tUpdate,tDelete,tInsert,tWhere;
    private JComboBox cTaules;
    private JScrollPane sp;
    private JTextArea taComanda;
    private JButton bExecutar;
    private int SIZELETRA=18;

    public Frame() {
        mb = new JMenuBar();
        mb.setBackground(new Color(255, 127, 0));
        setJMenuBar(mb);

        finestra = new JMenu("");
        finestra.setBackground(new Color(255, 127, 0));
        finestra.setFont(new Font("Andale Mono", 1, SIZELETRA));
        finestra.setForeground(new Color(0, 0, 0));
        mb.add(finestra);

        cbTable = new JComboBox();
        cbTable.addItem("Plantas");
        cbTable.addItem("Familias");
        cbTable.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {
                actualitzaTaules();
            }
        });

        tSelect = new JTextField(10);
        tSelect.addActionListener(this);
        tUpdate = new JTextField(10);
        tUpdate.addActionListener(this);
        tInsert = new JTextField(10);
        tInsert.addActionListener(this);
//        tDelete = new JTextField(10);
//        tDelete.addActionListener(this);
        tWhere = new JTextField(20);
        tWhere.addActionListener(this);

        lTable = new JLabel("TABLA");
        lSelect = new JLabel("SELECT");
        lInsert  = new JLabel("INSERT INTO");
        lDelete = new JLabel("DELETE FROM");
        lUpdate = new JLabel("UPDATE");
        lWhere = new JLabel("WHERE");

        lTableContentSelect = new JLabel();
        lTableContentUpdate = new JLabel();
        lTableContentDelete= new JLabel();
        lTableContentInsert = new JLabel();

        pTable =  new JPanel();
        pSelect = new JPanel();
        pUpdate = new JPanel();
        pDelete = new JPanel();
        pInsert  = new JPanel();
        pWhere = new JPanel();

        bExecutar = new JButton("EJECUTAR");
        bExecutar.addActionListener(this);

        pGen = new JPanel();

        //para aprender sobre layoutManagers
        //https://docs.oracle.com/javase/tutorial/uiswing/layout/visual.html
        //https://codingpointer.com/java-tutorial/java-box-layout

        pGen.setLayout(new BoxLayout(pGen, BoxLayout.Y_AXIS));

        pTable.add(lTable);
        pTable.add(cbTable);
        pGen.add(pTable);

        pSelect.add(lSelect);
        pSelect.add(tSelect);
        pSelect.add(lTableContentSelect);
        pGen.add(pSelect);

        pUpdate.add(lUpdate);
        pUpdate.add(lTableContentUpdate);
        pUpdate.add(tUpdate);
        pGen.add(pUpdate);

        pInsert.add(lInsert);
        pInsert.add(lTableContentInsert);
        pInsert.add(tInsert);
        pGen.add(pInsert);

        pDelete.add(lDelete);
        pDelete.add(lTableContentDelete);
        //pDelete.add(tDelete);
        pGen.add(pDelete);

        pWhere.add(lWhere);
        pWhere.add(tWhere);
        pGen.add(pWhere);

        pGen.add(bExecutar);

        this.add(pGen);

        //Adjust the size of all components.
        this.pack();

        initialize();
    }

    private void actualitzaTaules() {
        String taulaSelec = cbTable.getSelectedItem().toString();
        lTableContentSelect.setText("FROM "+taulaSelec);
        lTableContentUpdate.setText(taulaSelec+ " SET");
        lTableContentDelete.setText(taulaSelec);
        lTableContentInsert.setText(taulaSelec);
    }

    public void initialize(){
        setTitle("bddlovers");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(500,400);
        setVisible(true);
        setLocationRelativeTo(null);
        actualitzaTaules();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==bExecutar){
            Crud crud = new Crud();
            String taulaSelec = cbTable.getSelectedItem().toString();
            String comanda;
            String condicio = tWhere.getText();
            List result = null;
            if(!tSelect.getText().equals("")){ //si hi ha text en tSelect
                comanda=tSelect.getText();
                result= (List) crud.select(taulaSelec,comanda,condicio);
            } else if(!tUpdate.getText().equals("")){ //si hi ha text en tUpdate
                comanda=tUpdate.getText();
                result= (List) crud.update(taulaSelec,comanda,condicio);
            } else if(!tInsert.getText().equals("")){ //si hi ha text en tInsert
                comanda=tInsert.getText();
                result= (List) crud.insert(taulaSelec,comanda,condicio);
            } else { //si no hi ha text en cap s'executar√† com a delete
                result= (List) crud.delete(taulaSelec, condicio);
            }
            textareaComanda.setText(result.toString());
        }
    }
}
